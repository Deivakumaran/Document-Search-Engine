/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import FullSearch.Full_Index_Search;
import Suggestion.Lucene_Suggestion;
import java.awt.Color;
import java.io.IOException;
import java.text.NumberFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import luceneTEXT.Lucene_Indexing;
import luceneHTML.IndexHTML;
import luceneJSON.IndexJSON;
import lucenePDF.IndexPDF;
import luceneWord.IndexWord;
import luceneXML.IndexXML;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.search.highlight.InvalidTokenOffsetsException;

/**
 *
 * @author PeaceFull
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    String operatorSelect;
    String fileSelect;
    ButtonGroup operatorGroup;
    ButtonGroup fileGroup;

    public MainJFrame() {
        operatorGroup = new ButtonGroup();

        fileGroup = new ButtonGroup();
        initComponents();
        operatorGroup.add(andRadioButton);
        operatorGroup.add(orRadioButton);
        operatorGroup.add(notRadioButton);
        fileGroup.add(jsonDocumentRadioButton);
        fileGroup.add(pdfDocumentRadioButton);
        fileGroup.add(textDocumentRadioButton);
        fileGroup.add(xmlDocumentRadioButton);

        fileGroup.add(wordDocumentRadioButton);
        fileGroup.add(htmlDocumentRadioButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        splitJPane = new javax.swing.JSplitPane();
        leftJPanel = new javax.swing.JPanel();
        searchTextBox = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        textDocumentRadioButton = new javax.swing.JRadioButton();
        htmlDocumentRadioButton = new javax.swing.JRadioButton();
        xmlDocumentRadioButton = new javax.swing.JRadioButton();
        jsonDocumentRadioButton = new javax.swing.JRadioButton();
        searchButton = new javax.swing.JButton();
        suggestButton = new javax.swing.JButton();
        andRadioButton = new javax.swing.JRadioButton();
        orRadioButton = new javax.swing.JRadioButton();
        notRadioButton = new javax.swing.JRadioButton();
        searchTextBox2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestTextArea = new javax.swing.JTextArea();
        pdfDocumentRadioButton = new javax.swing.JRadioButton();
        wordDocumentRadioButton = new javax.swing.JRadioButton();
        suggestButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        advancedSearch = new javax.swing.JButton();
        mainSearchTextBox = new javax.swing.JTextField();
        searchLabel1 = new javax.swing.JLabel();
        mainSuggestButton = new javax.swing.JButton();
        mainsearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainSuggestTextArea = new javax.swing.JTextArea();
        rightJPanel = new javax.swing.JPanel();
        rightScrollPane = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setPreferredSize(new java.awt.Dimension(146, 450));

        splitJPane.setDividerLocation(500);

        leftJPanel.setBackground(new java.awt.Color(238, 238, 248));
        leftJPanel.setBorder(new javax.swing.border.MatteBorder(null));
        leftJPanel.setPreferredSize(new java.awt.Dimension(300, 500));

        searchTextBox.setEnabled(false);
        searchTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextBoxActionPerformed(evt);
            }
        });

        searchLabel.setText("Enter the text to be Searched");

        textDocumentRadioButton.setText("Text Document");
        textDocumentRadioButton.setEnabled(false);

        htmlDocumentRadioButton.setText("HTML Document");
        htmlDocumentRadioButton.setEnabled(false);

        xmlDocumentRadioButton.setText("XML Format Document");
        xmlDocumentRadioButton.setEnabled(false);

        jsonDocumentRadioButton.setText("JSON Format Document");
        jsonDocumentRadioButton.setEnabled(false);

        searchButton.setText("Search");
        searchButton.setEnabled(false);
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        suggestButton.setText("Suggest Words TextBox-1");
        suggestButton.setEnabled(false);
        suggestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestButtonActionPerformed(evt);
            }
        });

        andRadioButton.setText("AND ");
        andRadioButton.setEnabled(false);
        andRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andRadioButtonActionPerformed(evt);
            }
        });

        orRadioButton.setText("OR");
        orRadioButton.setEnabled(false);
        orRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orRadioButtonActionPerformed(evt);
            }
        });

        notRadioButton.setText("NOT");
        notRadioButton.setEnabled(false);
        notRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notRadioButtonActionPerformed(evt);
            }
        });

        searchTextBox2.setEnabled(false);
        searchTextBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextBox2ActionPerformed(evt);
            }
        });

        suggestTextArea.setEditable(false);
        suggestTextArea.setColumns(20);
        suggestTextArea.setRows(5);
        suggestTextArea.setEnabled(false);
        jScrollPane1.setViewportView(suggestTextArea);

        pdfDocumentRadioButton.setText("PDF Document");
        pdfDocumentRadioButton.setEnabled(false);
        pdfDocumentRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfDocumentRadioButtonActionPerformed(evt);
            }
        });

        wordDocumentRadioButton.setText("Word Format Document");
        wordDocumentRadioButton.setEnabled(false);

        suggestButton2.setText("Suggest Words TextBox-2");
        suggestButton2.setEnabled(false);
        suggestButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Text Format to be searched");

        jLabel2.setText("Operator Search");

        advancedSearch.setText("Advanced");
        advancedSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedSearchActionPerformed(evt);
            }
        });

        mainSearchTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSearchTextBoxActionPerformed(evt);
            }
        });

        searchLabel1.setText("Enter the text to be Searched");

        mainSuggestButton.setText("Suggest Words TextBox");
        mainSuggestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSuggestButtonActionPerformed(evt);
            }
        });

        mainsearchButton.setText("Search");
        mainsearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainsearchButtonActionPerformed(evt);
            }
        });

        mainSuggestTextArea.setEditable(false);
        mainSuggestTextArea.setColumns(20);
        mainSuggestTextArea.setRows(5);
        jScrollPane2.setViewportView(mainSuggestTextArea);

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(searchLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftJPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(advancedSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainSearchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainsearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainSuggestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, leftJPanelLayout.createSequentialGroup()
                                        .addComponent(andRadioButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(orRadioButton)))
                                .addGap(18, 18, 18)
                                .addComponent(notRadioButton))
                            .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textDocumentRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(htmlDocumentRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jsonDocumentRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pdfDocumentRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wordDocumentRadioButton)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(xmlDocumentRadioButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(suggestButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(suggestButton))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addComponent(searchLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainSearchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainSuggestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainsearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(advancedSearch)
                .addGap(26, 26, 26)
                .addComponent(searchLabel)
                .addGap(18, 18, 18)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suggestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suggestButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(andRadioButton)
                            .addComponent(orRadioButton)
                            .addComponent(notRadioButton)))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textDocumentRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(htmlDocumentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsonDocumentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xmlDocumentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pdfDocumentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordDocumentRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton)
                .addGap(40, 40, 40))
        );

        splitJPane.setLeftComponent(leftJPanel);

        rightJPanel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        rightScrollPane.setViewportView(resultTextArea);

        javax.swing.GroupLayout rightJPanelLayout = new javax.swing.GroupLayout(rightJPanel);
        rightJPanel.setLayout(rightJPanelLayout);
        rightJPanelLayout.setHorizontalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
        );
        rightJPanelLayout.setVerticalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        splitJPane.setRightComponent(rightJPanel);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextBoxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:

        resultTextArea.setText("");
        try {
            if (andRadioButton.isSelected()) {
                operatorSelect = "AND";

            } else if (orRadioButton.isSelected()) {
                operatorSelect = "OR";
            } else if (notRadioButton.isSelected()) {
                operatorSelect = "NOT";
            } else {
                operatorSelect = "NONE";
            }

            if (jsonDocumentRadioButton.isSelected()) {
                fileSelect = "JSON";
            } else if (textDocumentRadioButton.isSelected()) {
                fileSelect = "TEXT";
            } else if (xmlDocumentRadioButton.isSelected()) {
                fileSelect = "XML";
            } else if (htmlDocumentRadioButton.isSelected()) {
                fileSelect = "HTML";
            } else if (pdfDocumentRadioButton.isSelected()) {
                fileSelect = "PDF";
            } else if (wordDocumentRadioButton.isSelected()) {
                fileSelect = "WORD";
            } else{
                fileSelect="ALL";
            }
            
            

            String searchText = searchTextBox.getText();
            if (searchText.length() == 0) {
                JOptionPane.showMessageDialog(null, "Please enter text to search");
                return;
            }
            searchText = searchText.trim().replaceAll(" +", " ");
            String searchText2 = searchTextBox2.getText();
           
            if(fileSelect=="ALL" ){
                Full_Index_Search search=new Full_Index_Search(searchText, searchText2, resultTextArea);
                    search.searchMain(searchText,searchText2,operatorSelect);
                
                        
                 }
            
            
            
             else  if (fileSelect == "TEXT") {

                if (operatorSelect == "NONE") {
                    Lucene_Indexing indexing = new Lucene_Indexing(searchText, searchText2, resultTextArea);
                    indexing.indexingText(operatorSelect);
                } else {

                    if (searchText2.length() == 0) {
                        JOptionPane.showMessageDialog(null, "Please enter the text to be searched in second text Box");
                        return;
                    }

                    searchText2 = searchText2.trim().replaceAll(" +", " ");
                    Lucene_Indexing indexing = new Lucene_Indexing(searchText, searchText2, resultTextArea);
                    indexing.indexingText(operatorSelect);
                }

            } else if (fileSelect == "PDF") {
                IndexPDF indexing = new IndexPDF(searchText, searchText2, resultTextArea);
                indexing.indexingPdfText(operatorSelect);
            } else if (fileSelect == "JSON") {
                IndexJSON indexing = new IndexJSON(searchText);
                indexing.indexingJSON();
            } else if (fileSelect == "XML") {
                IndexXML indexing = new IndexXML(searchText, searchText2, operatorSelect, resultTextArea);
                indexing.indeXML();
            } else if (fileSelect == "HTML") {
                IndexHTML indexing = new IndexHTML(searchText, resultTextArea);
                indexing.main();
            } else if (fileSelect == "WORD") {
                IndexWord indexing = new IndexWord(searchText, resultTextArea);
                indexing.main();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void suggestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestButtonActionPerformed
        // TODO add your handling code here:

        String searchText = searchTextBox.getText();
        if (searchText.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter text to suggest words");
            return;
        }

        if (jsonDocumentRadioButton.isSelected()) {
            fileSelect = "JSON";
        } else if (textDocumentRadioButton.isSelected()) {
            fileSelect = "TEXT";
        } else if (xmlDocumentRadioButton.isSelected()) {
            fileSelect = "XML";
        } else if (htmlDocumentRadioButton.isSelected()) {
            fileSelect = "PDF";
        } else if (wordDocumentRadioButton.isSelected()) {
            fileSelect = "WORD";
        } else {

            JOptionPane.showMessageDialog(null, "Please select the file format for suggestion of words");
            return;
        }

        Lucene_Suggestion suggestion = new Lucene_Suggestion();
        searchText = searchText.trim().replaceAll(" +", " ");

        int wordLength = searchText.split("\\s+").length;
        String lastWord = searchText.substring(searchText.lastIndexOf(" ") + 1);
        suggestion.suggest(lastWord, suggestTextArea, fileSelect);

    }//GEN-LAST:event_suggestButtonActionPerformed

    private void andRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andRadioButtonActionPerformed
        // TODO add your handling code here:
        searchTextBox2.setEnabled(true);
        suggestButton2.setEnabled(true);


    }//GEN-LAST:event_andRadioButtonActionPerformed

    private void orRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orRadioButtonActionPerformed
        // TODO add your handling code here:
        searchTextBox2.setEnabled(true);
        suggestButton2.setEnabled(true);

    }//GEN-LAST:event_orRadioButtonActionPerformed

    private void notRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notRadioButtonActionPerformed
        // TODO add your handling code here:
        searchTextBox2.setEnabled(true);
        suggestButton2.setEnabled(true);

    }//GEN-LAST:event_notRadioButtonActionPerformed

    private void searchTextBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextBox2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchTextBox2ActionPerformed

    private void pdfDocumentRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfDocumentRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pdfDocumentRadioButtonActionPerformed

    private void suggestButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestButton2ActionPerformed

        String searchText2 = searchTextBox2.getText();
        if (searchText2.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter text to search");
            return;
        }

        if (jsonDocumentRadioButton.isSelected()) {
            fileSelect = "JSON";
        } else if (textDocumentRadioButton.isSelected()) {
            fileSelect = "TEXT";
        } else if (xmlDocumentRadioButton.isSelected()) {
            fileSelect = "XML";
        } else if (htmlDocumentRadioButton.isSelected()) {
            fileSelect = "PDF";
        } else if (wordDocumentRadioButton.isSelected()) {
            fileSelect = "WORD";
        } else {

            JOptionPane.showMessageDialog(null, "Please select the file format for suggestion of words");
            return;
        }

        Lucene_Suggestion suggestion = new Lucene_Suggestion();

        searchText2 = searchText2.trim().replaceAll(" +", " ");

        int wordLength2 = searchText2.split("\\s+").length;
        String lastWord2 = searchText2.substring(searchText2.lastIndexOf(" ") + 1);
      //  suggestion.suggest(lastWord2, suggestTextArea, fileSelect);
    }//GEN-LAST:event_suggestButton2ActionPerformed

    private void advancedSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedSearchActionPerformed
        // TODO add your handling code here:
        mainSuggestTextArea.setText("");
        mainSuggestTextArea.setEnabled(false);
        mainSearchTextBox.setEnabled(false);
        mainSuggestButton.setEnabled(false);
        mainsearchButton.setEnabled(false);
         searchTextBox.setEnabled(true);
         andRadioButton.setEnabled(true);
         
         orRadioButton.setEnabled(true);
         
         notRadioButton.setEnabled(true);
         suggestTextArea.setEnabled(true);
         pdfDocumentRadioButton.setEnabled(true);
         
         xmlDocumentRadioButton.setEnabled(true);
         
        htmlDocumentRadioButton.setEnabled(true);
         
         wordDocumentRadioButton.setEnabled(true);
         
         textDocumentRadioButton.setEnabled(true);
         jsonDocumentRadioButton.setEnabled(true);
         suggestButton.setEnabled(true);
         searchButton.setEnabled(true);
    }//GEN-LAST:event_advancedSearchActionPerformed

    private void mainSearchTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainSearchTextBoxActionPerformed

    private void mainSuggestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSuggestButtonActionPerformed
        // TODO add your handling code here:
        
          String searchText = mainSearchTextBox.getText();
        if (searchText.length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter text to suggest words");
            return;
        }

      

        Lucene_Suggestion suggestion = new Lucene_Suggestion();

        searchText = searchText.trim().replaceAll(" +", " ");

        int wordLength = searchText.split("\\s+").length;
        String lastWord = searchText.substring(searchText.lastIndexOf(" ") + 1);
    //    suggestion.suggest(lastWord,mainSuggestTextArea, fileSelect);

    }//GEN-LAST:event_mainSuggestButtonActionPerformed

    private void mainsearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainsearchButtonActionPerformed
        // TODO add your handling code here:
        
        resultTextArea.setText("");
         
        String mainSearch = mainSearchTextBox.getText();
       
         if (mainSearch.length() == 0) {
                JOptionPane.showMessageDialog(null, "Please enter text to search");
                return;
            }
        
                mainSearch = mainSearch.trim().replaceAll(" +", " ");
                Full_Index_Search search=new Full_Index_Search(mainSearch,"",resultTextArea);
        try {
            search.searchMain(mainSearch,"","NONE");
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidTokenOffsetsException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
                
                   
            
    }//GEN-LAST:event_mainsearchButtonActionPerformed

    public void printResult(String resultString) {

        resultTextArea.setText(resultString);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton advancedSearch;
    private javax.swing.JRadioButton andRadioButton;
    private javax.swing.JRadioButton htmlDocumentRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton jsonDocumentRadioButton;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JTextField mainSearchTextBox;
    private javax.swing.JButton mainSuggestButton;
    private javax.swing.JTextArea mainSuggestTextArea;
    private javax.swing.JButton mainsearchButton;
    private javax.swing.JRadioButton notRadioButton;
    private javax.swing.JRadioButton orRadioButton;
    private javax.swing.JRadioButton pdfDocumentRadioButton;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JPanel rightJPanel;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel searchLabel1;
    private javax.swing.JTextField searchTextBox;
    private javax.swing.JTextField searchTextBox2;
    private javax.swing.JSplitPane splitJPane;
    private javax.swing.JButton suggestButton;
    private javax.swing.JButton suggestButton2;
    private javax.swing.JTextArea suggestTextArea;
    private javax.swing.JRadioButton textDocumentRadioButton;
    private javax.swing.JRadioButton wordDocumentRadioButton;
    private javax.swing.JRadioButton xmlDocumentRadioButton;
    // End of variables declaration//GEN-END:variables
}
